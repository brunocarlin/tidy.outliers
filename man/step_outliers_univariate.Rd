% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univariate.R
\name{step_outliers_univariate}
\alias{step_outliers_univariate}
\alias{tidy.step_outliers_univariate}
\title{Calculate the univariate outlier "score"}
\usage{
step_outliers_univariate(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  outlier_score = NULL,
  columns = NULL,
  name_mutate = ".outliers_univariate",
  outlier_function = function(x) {
     abs((percent_rank(x) - 0.5)) * 2
 },
  combination_function = mean,
  skip = TRUE,
  id = rand_id("outliers_univariate")
)

\method{tidy}{step_outliers_univariate}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables will be transformed. See \code{\link[=selections]{selections()}} for
more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{not defined for this function}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{outlier_score}{a placeholder for the exit of this function don't change}

\item{columns}{A character string of variable names that will
be populated (eventually) by the terms argument.}

\item{name_mutate}{the name of the generated column with univariate scores}

\item{outlier_function}{the function used on a column basis to calculate the outlier score.}

\item{combination_function}{the function used on a row basis to combine different outlier function results.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake()}}? While all operations are baked
when \code{\link[recipes:prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_outliers_univariate} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any), with the name on \code{name_mutate} and the scores calculated. For the
\code{tidy} method, a tibble with columns \code{index} (the row indexes of the tibble) and \code{outlier_score} (the scores).
}
\description{
\code{step_outliers_univariate} creates a \emph{specification} of a recipe
step that will calculate the outlier score using the user supplied outlier_function on a univariate basis
the combination is of multiple variables is handled  by the combination_function
}
\details{
All columns in the data are sampled and returned by \code{\link[=juice]{juice()}}
and \code{\link[=bake]{bake()}}.

All columns used in this step must be numeric with no missing data.

When used in modeling, users should strongly consider using the
option \code{skip = TRUE} so that this operation is \emph{not}
conducted outside of the training set.
}
\examples{
library(recipes)
library(tidy.outliers)
rec <-
  recipe(mpg ~ ., data = mtcars) \%>\%
  step_outliers_univariate(all_numeric_predictors()) \%>\%
  prep(mtcars)

bake(rec, new_data = NULL)

tidy(rec, number = 1)
}
\concept{preprocessing}
\keyword{datagen}
