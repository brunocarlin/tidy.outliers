% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove.R
\name{step_outliers_remove}
\alias{step_outliers_remove}
\alias{tidy.step_outliers_remove}
\title{Calculate the aggregation of a set of outlier columns and filters the resulting tibble}
\usage{
step_outliers_remove(
  recipe,
  ...,
  aggregation_function = mean,
  probability_dropout = 0.95,
  outliers_indexes = NULL,
  aggregation_results = NULL,
  col_names = NULL,
  role = NA,
  trained = FALSE,
  skip = TRUE,
  id = rand_id("outliers_remove")
)

\method{tidy}{step_outliers_remove}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables will be transformed. See \code{\link[=selections]{selections()}} for
more details. For the \code{tidy} method, these are not
currently used.}

\item{aggregation_function}{a function that returns a value between 0 and 1 on an applied row}

\item{probability_dropout}{a value between 0 and 1 to decide outliers uses ">=" rule}

\item{outliers_indexes}{placeholder for the tidy method}

\item{aggregation_results}{a placeholder for the vector of probabilities}

\item{col_names}{name of the columns being operated on, after filtering they will be removed}

\item{role}{not defined for this function}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake()}}? While all operations are baked
when \code{\link[recipes:prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_outliers_remove} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any), with the name on \code{name_mutate} and the probabilities calculated. For the
\code{tidy} method, a tibble with columns \code{index} (the row indexes of the tibble), \code{outliers} (the filtered outliers), \code{aggregation_results} the "probabilities calculated".
}
\description{
\code{step_outliers_remove} creates a \emph{specification} of a recipe
step that will calculate the probability of the row of selected columns using an aggregation function and filter the resulting tibble based on the filter function
}
\details{
All columns in the data are sampled and returned by \code{\link[=juice]{juice()}}
and \code{\link[=bake]{bake()}}.

All columns used in this step must be numeric with no missing data.

When used in modeling, users should strongly consider using the
option \code{skip = TRUE} so that this operation is \emph{not}
conducted outside of the training set.
}
\examples{
library(recipes)
library(tidy.outliers)
rec_obj <-
  recipe(mpg ~ ., data = mtcars) \%>\%
  step_outliers_maha(all_numeric(), -all_outcomes()) \%>\%
  step_outliers_remove(contains(r"(.outliers)")) \%>\%
  prep(mtcars)

juice(rec_obj)

tidy(rec_obj, number = 2)
}
\concept{preprocessing}
\keyword{datagen}
